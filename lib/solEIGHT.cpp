#include<iostream>
#include<string>
#include<cmath>
#include "../include/solutions.h"
#include "../include/helperFunc.h"
using namespace std;

#define NUM_DIGITS 5

int problemEight()
{
	//Represent the 1000-digit number as a string because an int can hold upto 64 bytes only, and will need to convert it into a string anyway
	string strNum = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";
	int strSize = getStrSize(strNum);
	
	int startPos = 0;	//Starting index
	int endPos = strSize-NUM_DIGITS;	//Maximum value of the index that we can start the 5 digit sequence
	
	int maxProduct = 0;
	
	int i, j;
	
	for(i=startPos; i<=endPos; i++)
	{
		int tmpProduct = strNum[i] - 48;
		
		int innerStartPos = i+1;
		int innerEndPos = i+NUM_DIGITS-1;
		
		for(j=innerStartPos; j<=innerEndPos; j++)
		{
			int k = strNum[j] - 48;
			tmpProduct *= k;
		}
		
		maxProduct = tmpProduct>maxProduct ? tmpProduct : maxProduct;
	}

	return maxProduct;
}
